// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Goal {
  id           Int      @id @default(autoincrement())
  gmt_create   DateTime @default(now())
  gmt_modified DateTime @updatedAt
  goal_id      String   @unique
  tag          String
  name         String
  description  String?
}

model Plan {
  id           Int      @id @default(autoincrement())
  gmt_create   DateTime @default(now())
  gmt_modified DateTime @updatedAt
  plan_id      String   @unique
  name         String
  description  String?
  difficulty   String?
  progress     Int      @default(0)
  tags         PlanTagAssociation[]
  progressRecords ProgressRecord[]
}

model PlanTagAssociation {
  id           Int      @id @default(autoincrement())
  gmt_create   DateTime @default(now())
  gmt_modified DateTime @updatedAt
  plan_id      String
  tag          String
  plan         Plan     @relation(fields: [plan_id], references: [plan_id], onDelete: Cascade)
}

model ProgressRecord {
  id           Int      @id @default(autoincrement())
  gmt_create   DateTime @default(now())
  gmt_modified DateTime @updatedAt
  plan_id      String
  content      String?
  thinking     String?
  plan         Plan     @relation(fields: [plan_id], references: [plan_id], onDelete: Cascade)
}

model Report {
  id           Int      @id @default(autoincrement())
  gmt_create   DateTime @default(now())
  gmt_modified DateTime @updatedAt
  report_id    String   @unique
  title        String
  subtitle     String?
  content      String?
}
